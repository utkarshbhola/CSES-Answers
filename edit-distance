#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int editDistance(int i, int j, string& n, string& m, vector<vector<int>>& dp) {
    if (i < 0) return j + 1;
    if (j < 0) return i + 1;

    if (dp[i][j] != -1) return dp[i][j];

    if (n[i] == m[j])
        return dp[i][j] = editDistance(i - 1, j - 1, n, m, dp);

    return dp[i][j] = 1 + min({
        editDistance(i - 1, j, n, m, dp),
        editDistance(i, j - 1, n, m, dp),
        editDistance(i - 1, j - 1, n, m, dp)
    });
}

int main() {
    string n, m;
    cin >> n >> m;
    int len1 = n.length(), len2 = m.length();
    vector<vector<int>> dp(len1, vector<int>(len2, -1));
    cout << editDistance(len1 - 1, len2 - 1, n, m, dp) << endl;
    return 0;
}
