#include<iostream>
#include<vector>
#include<queue>
#include<stack>
#include<algorithm>
using namespace std;
int main(){
    long long n, m;
    cin>> n >> m;
    vector<vector<long long>> adj(n + 1);  // 1-indexed
    vector<long long> in_degree(n + 1, 0);
    for(int i = 0; i < m; i++){
        long long u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        in_degree[v]++;
    }
    queue<long long> q;
    vector<long long> order;
    for(long long i = 1; i <= n; i++){
        if(in_degree[i] == 0)
            q.push(i);
    }
    while(!q.empty()){
        long long u = q.front();
        q.pop();
        order.push_back(u);
        for(long long v : adj[u]){
            in_degree[v]--;
            if(in_degree[v] == 0)
                q.push(v);
        }
    }
    vector<long long> dp(n + 1, 0);
    dp[1] = 1;
    for(long long i : order)
        for(long long v : adj[i])
            dp[v] = (dp[v] + dp[i]) % 1000000007;
    cout << dp[n] << endl;
}